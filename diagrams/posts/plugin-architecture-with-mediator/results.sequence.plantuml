@startuml
actor User as user
participant App as app
queue Mediator as q
participant "Tenant Consumer" as tenant
participant "Tenant Component" as tenantcomponent
participant "Default Consumer" as default
participant "Default Component" as defaultcomponent
database "Data Source" as ds

user -> app : Visit /results?IDict<string, string> Page
app --> q: Publish ResultComponentRequest Message
q --> tenant: Message Consumed
tenant -> tenantcomponent: Construct Component w/QueryModel
tenantcomponent -> tenant: ComponentResponse
tenant --> q: Message Response
q --> default: Message Consumed
destroy q
note left: Default if not Consumed by Tenant
default -> defaultcomponent: Construct Component w/QueryModel
defaultcomponent -> default: ComponentResponse
default --> q: Message Response
destroy q
q --> app: ComponentResponse Message
app -> user: Render DynamicComponent


app -> tenantcomponent: OnInitializedAsync
tenantcomponent --> q: Publish ResultRequest<QueryModel>
q --> tenant: Message Consumed
tenant -> ds: Query Database w/ QueryModel
ds -> tenant: Results as ViewModel
tenant --> q: Message Response
q --> tenantcomponent: PagedResultResponse<ViewModel>
tenantcomponent -> app: Render Results
@enduml